- name: fetch gcc source code
  unarchive:
    src: https://ftp.gnu.org/gnu/gcc/gcc-{{ version }}/gcc-{{ version }}.tar.gz
    dest: "{{ dist_dir }}"
    remote_src: yes
    list_files: yes
  register: source
- set_fact:
    original_source_directory: "{{ source.dest }}/{{ source.files[0] }}"

- set_fact:
    source_directory: "{{ original_source_directory | regex_replace('\\/$', '') }}-pass1"
- name: copy source from {{ original_source_directory }} to {{ source_directory }}
  command: cp -R "{{ original_source_directory }}" "{{ source_directory }}"

- set_fact:
    work_directory: "{{ source_directory }}/build"
- name: create dist directory
  file:
    name: "{{ work_directory }}"
    state: directory

- set_fact:
    libraries:
      - name: mpfr
        src: https://ftp.gnu.org/gnu/mpfr/mpfr-{{ internal_library_version.mpfr }}.tar.xz
      - name: gmp
        src: https://ftp.gnu.org/gnu/gmp/gmp-{{ internal_library_version.gmp }}.tar.xz
      - name: mpc
        src: https://ftp.gnu.org/gnu/mpc/mpc-{{ internal_library_version.mpc }}.tar.gz
- include: library.yml
  loop: "{{ libraries }}"
  loop_control:
    loop_var: library

- name: change lib64 name
  replace:
    path: "{{ source_directory }}/gcc/config/i386/t-linux64"
    regexp: 'm64=\.\./lib64'
    replace: 'm64=../lib'
  when: host_architecture == "x86_64"

- set_fact:
    configure_options:
      - "--target={{ target }}"
      - "--prefix={{ tool_dir }}"
      - "--with-glibc-version=2.11"
      - "--with-sysroot={{ root }}"
      - "--with-newlib"
      - "--without-headers"
      - "--enable-initfini-array"
      - "--disable-nls"
      - "--disable-shared"
      - "--disable-multilib"
      - "--disable-decimal-float"
      - "--disable-threads"
      - "--disable-libatomic"
      - "--disable-libgomp"
      - "--disable-libquadmath"
      - "--disable-libssp"
      - "--disable-libvtv"
      - "--disable-libstdcxx"
      - "--enable-languages=c,c++"
- name: configure
  command: "../configure {{ configure_options | join(' ') }}"
  args:
    chdir: "{{ work_directory }}"

- name: build
  command: make -j{{ vcpus | int + 2 }}
  args:
    chdir: "{{ work_directory }}"

- name: install
  command: make install
  args:
    chdir: "{{ work_directory }}"

- command: "{{ target }}-gcc -print-libgcc-file-name"
  register: gcc_file_name
  changed_when: no
- set_fact:
    limits_header_path: "{{ gcc_file_name.stdout | dirname }}/install-tools/include/limits.h"
- assemble:
    src: "{{ source_directory }}/gcc"
    dest: "{{ limits_header_path }}"
    regexp: "(?:limit(?:x|y)|glimits).h"
    remote_src: yes
- debug:
    msg: "{{ limits_header_path }}"
